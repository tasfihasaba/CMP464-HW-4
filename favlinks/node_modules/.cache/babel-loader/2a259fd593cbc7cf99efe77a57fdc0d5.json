{"ast":null,"code":"var _jsxFileName = \"/Users/tasfihasaba/Desktop/favlinks/src/components/LinkContainer.js\";\n// import React from 'react';\n// import Table from './Table';\n// import Form from './Form';\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LinkContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addNewLink = link => {\n      let newLinks = [...this.state.links, link];\n      this.setState({\n        links: newLinks\n      });\n    };\n\n    this.removeLink = index => {\n      let newLinks = [...this.state.links];\n      newLinks.splice(index, 1);\n      this.setState({\n        links: newLinks\n      });\n    };\n\n    this.state = {\n      links: []\n    };\n    this.addNewLink = this.addNewLink.bind(this);\n    this.removeLink = this.removeLink.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Favorite Links\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LinkList, {\n        links: this.state.links,\n        removeLink: this.removeLink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        addNew: this.addNewLink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass LinkList extends Component {\n  render() {\n    const linkItems = this.props.links.map((link, index) => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        link: link,\n        index: index,\n        removeLink: this.props.removeLink\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: linkItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Link extends Component {\n  render() {\n    const {\n      link,\n      index,\n      removeLink\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: link.url,\n        children: link.linkName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => removeLink(index),\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      if (event.target.id === \"link\") {\n        this.setState({\n          linkName: event.target.value\n        }); // update the linkName in state\n      } else {\n        this.setState({\n          url: event.target.value\n        }); // update the url in state\n      }\n    };\n\n    this.onFormSubmit = event => {\n      event.preventDefault();\n      let newFavLink = {\n        linkName: this.state.linkName,\n        url: this.state.url\n      };\n      this.setState({\n        linkName: '',\n        url: ''\n      }); // reset the states\n\n      this.props.addNew(newFavLink); // addNew was passed as props from LinkContainer\n    };\n\n    this.state = {\n      linkName: '',\n      url: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => this.onFormSubmit(event),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"link\",\n        children: \"Link Name : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"link\",\n        value: this.state.linkName,\n        onChange: event => this.handleChange(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"url\",\n        children: \"URL : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"url\",\n        value: this.state.url,\n        onChange: event => this.handleChange(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => this.setState({\n          linkName: '',\n          url: ''\n        }),\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default LinkContainer; // class LinkContainer extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       favLinks: [],\n//     };\n//   }\n//   removeCharacter = (index) => {\n//     const tempArray = this.state.favLinks.slice(); // create a new array using slice\n//     tempArray.splice(index, 1); // it will remove one element starting from the index\n//     this.setState({ favLinks: tempArray }); // setting the new state\n//   };\n//   handleSubmit = (favLink) => {\n//     this.setState({\n//       favLinks: [...this.state.favLinks, favLink], // spread operator which will append the new link at the end\n//     });\n//   };\n//   render() {\n//     return (\n//       <div className=\"container\">\n//         <h1>My Favorite Links</h1>\n//         <p>Add a new url with a name and link to the table.</p>\n//         <Table\n//           linkData={this.state.favLinks}\n//           removeLink={(index) => this.removeCharacter(index)}\n//         />\n//         <br />\n//         <h3>Add New</h3>\n//         <Form addNew={(favLink) => this.handleSubmit(favLink)} />\n//       </div>\n//     );\n//   }\n// }\n// export default LinkContainer;","map":{"version":3,"sources":["/Users/tasfihasaba/Desktop/favlinks/src/components/LinkContainer.js"],"names":["Component","LinkContainer","constructor","props","addNewLink","link","newLinks","state","links","setState","removeLink","index","splice","bind","render","LinkList","linkItems","map","Link","url","linkName","Form","handleChange","event","target","id","value","onFormSubmit","preventDefault","newFavLink","addNew"],"mappings":";AAAA;AACA;AACA;AAEA,SAASA,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AACpCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,UAVmB,GAUNC,IAAI,IAAI;AACnB,UAAIC,QAAQ,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWC,KAAf,EAAsBH,IAAtB,CAAf;AACA,WAAKI,QAAL,CAAc;AAAED,QAAAA,KAAK,EAAEF;AAAT,OAAd;AACD,KAbkB;;AAAA,SAenBI,UAfmB,GAeNC,KAAK,IAAI;AACpB,UAAIL,QAAQ,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWC,KAAf,CAAf;AACAF,MAAAA,QAAQ,CAACM,MAAT,CAAgBD,KAAhB,EAAuB,CAAvB;AACA,WAAKF,QAAL,CAAc;AAAED,QAAAA,KAAK,EAAEF;AAAT,OAAd;AACD,KAnBkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAIA,SAAKJ,UAAL,GAAkB,KAAKA,UAAL,CAAgBS,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKH,UAAL,GAAkB,KAAKA,UAAL,CAAgBG,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAaDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,KAA5B;AAAmC,QAAA,UAAU,EAAE,KAAKE;AAApD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,IAAD;AAAM,QAAA,MAAM,EAAE,KAAKN;AAAnB;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA9BmC;;AAiCtC,MAAMW,QAAN,SAAuBf,SAAvB,CAAiC;AAC/Bc,EAAAA,MAAM,GAAG;AACP,UAAME,SAAS,GAAG,KAAKb,KAAL,CAAWK,KAAX,CAAiBS,GAAjB,CAAqB,CAACZ,IAAD,EAAOM,KAAP,KAAiB;AACtD,0BACE,QAAC,IAAD;AAAkB,QAAA,IAAI,EAAEN,IAAxB;AAA8B,QAAA,KAAK,EAAEM,KAArC;AAA4C,QAAA,UAAU,EAAE,KAAKR,KAAL,CAAWO;AAAnE,SAAWC,KAAX;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,KAJiB,CAAlB;AAMA,wBACE;AAAA,gBACGK;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAb8B;;AAgBjC,MAAME,IAAN,SAAmBlB,SAAnB,CAA6B;AAC3Bc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA,IAAF;AAAQM,MAAAA,KAAR;AAAeD,MAAAA;AAAf,QAA8B,KAAKP,KAAzC;AACA,wBACE;AAAA,8BACE;AAAG,QAAA,IAAI,EAAEE,IAAI,CAACc,GAAd;AAAA,kBAAoBd,IAAI,CAACe;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAMV,UAAU,CAACC,KAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAT0B;;AAY7B,MAAMU,IAAN,SAAmBrB,SAAnB,CAA6B;AAC3BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBmB,YAXmB,GAWJC,KAAK,IAAI;AACtB,UAAGA,KAAK,CAACC,MAAN,CAAaC,EAAb,KAAoB,MAAvB,EAA+B;AAC7B,aAAKhB,QAAL,CAAc;AAAEW,UAAAA,QAAQ,EAAEG,KAAK,CAACC,MAAN,CAAaE;AAAzB,SAAd,EAD6B,CACoB;AAClD,OAFD,MAEO;AACL,aAAKjB,QAAL,CAAc;AAAEU,UAAAA,GAAG,EAAEI,KAAK,CAACC,MAAN,CAAaE;AAApB,SAAd,EADK,CACuC;AAC7C;AACF,KAjBkB;;AAAA,SAmBnBC,YAnBmB,GAmBJJ,KAAK,IAAI;AACtBA,MAAAA,KAAK,CAACK,cAAN;AACA,UAAIC,UAAU,GAAG;AAAET,QAAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWa,QAAvB;AAAiCD,QAAAA,GAAG,EAAE,KAAKZ,KAAL,CAAWY;AAAjD,OAAjB;AACA,WAAKV,QAAL,CAAc;AAAEW,QAAAA,QAAQ,EAAE,EAAZ;AAAgBD,QAAAA,GAAG,EAAE;AAArB,OAAd,EAHsB,CAGoB;;AAC1C,WAAKhB,KAAL,CAAW2B,MAAX,CAAkBD,UAAlB,EAJsB,CAIS;AAChC,KAxBkB;;AAEjB,SAAKtB,KAAL,GAAa;AACXa,MAAAA,QAAQ,EAAE,EADC;AAEXD,MAAAA,GAAG,EAAE;AAFM,KAAb;AAKA,SAAKG,YAAL,GAAoB,KAAKA,YAAL,CAAkBT,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKc,YAAL,GAAoB,KAAKA,YAAL,CAAkBd,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAiBDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,QAAQ,EAAGS,KAAD,IAAW,KAAKI,YAAL,CAAkBJ,KAAlB,CAA3B;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWa,QAA/C;AAAyD,QAAA,QAAQ,EAAGG,KAAD,IAAW,KAAKD,YAAL,CAAkBC,KAAlB;AAA9E;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,KAAtB;AAA4B,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWY,GAA9C;AAAmD,QAAA,QAAQ,EAAGI,KAAD,IAAW,KAAKD,YAAL,CAAkBC,KAAlB;AAAxE;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,MAAM,KAAKd,QAAL,CAAc;AAAEW,UAAAA,QAAQ,EAAE,EAAZ;AAAgBD,UAAAA,GAAG,EAAE;AAArB,SAAd,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAtC0B;;AAyC7B,eAAelB,aAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React from 'react';\n// import Table from './Table';\n// import Form from './Form';\n\nimport { Component } from \"react\";\n\nclass LinkContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      links: []\n    }\n  \n    this.addNewLink = this.addNewLink.bind(this);\n    this.removeLink = this.removeLink.bind(this);\n  }\n\n  addNewLink = link => {\n    let newLinks = [...this.state.links, link];\n    this.setState({ links: newLinks });\n  }\n\n  removeLink = index => {\n    let newLinks = [...this.state.links];\n    newLinks.splice(index, 1);\n    this.setState({ links: newLinks });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>My Favorite Links</h1>\n        <LinkList links={this.state.links} removeLink={this.removeLink} />\n        <Form addNew={this.addNewLink} />\n      </div>\n    )\n  }\n}\n\nclass LinkList extends Component {\n  render() {\n    const linkItems = this.props.links.map((link, index) => {\n      return (\n        <Link key={index} link={link} index={index} removeLink={this.props.removeLink} />\n      )\n    })\n\n    return (\n      <ul>\n        {linkItems}\n      </ul>\n    )\n  }\n}\n\nclass Link extends Component {\n  render() {\n    const { link, index, removeLink } = this.props;\n    return (\n      <li>\n        <a href={link.url}>{link.linkName}</a>\n        <button onClick={() => removeLink(index)}>Remove</button>\n      </li>\n    )\n  }\n}\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      linkName: '',\n      url: ''\n    };\n  \n    this.handleChange = this.handleChange.bind(this);\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n  }\n\n  handleChange = event => {\n    if(event.target.id === \"link\") {\n      this.setState({ linkName: event.target.value }); // update the linkName in state\n    } else {\n      this.setState({ url: event.target.value }); // update the url in state\n    }\n  }\n\n  onFormSubmit = event => {\n    event.preventDefault();\n    let newFavLink = { linkName: this.state.linkName, url: this.state.url };\n    this.setState({ linkName: '', url: '' }); // reset the states\n    this.props.addNew(newFavLink); // addNew was passed as props from LinkContainer\n  }\n\n  render() {\n    return (\n      <form onSubmit={(event) => this.onFormSubmit(event)}>\n        <label htmlFor=\"link\">Link Name : </label>\n        <input type=\"text\" id=\"link\" value={this.state.linkName} onChange={(event) => this.handleChange(event)} />\n        <label htmlFor=\"url\">URL : </label>\n        <input type=\"text\" id=\"url\" value={this.state.url} onChange={(event) => this.handleChange(event)} />\n        <button type=\"submit\">Submit</button>\n        <button type=\"button\" onClick={() => this.setState({ linkName: '', url: '' })}>Reset</button>\n      </form>\n    );\n  }\n}\n\nexport default LinkContainer;\n\n\n// class LinkContainer extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       favLinks: [],\n//     };\n//   }\n\n//   removeCharacter = (index) => {\n//     const tempArray = this.state.favLinks.slice(); // create a new array using slice\n//     tempArray.splice(index, 1); // it will remove one element starting from the index\n//     this.setState({ favLinks: tempArray }); // setting the new state\n//   };\n\n//   handleSubmit = (favLink) => {\n//     this.setState({\n//       favLinks: [...this.state.favLinks, favLink], // spread operator which will append the new link at the end\n//     });\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"container\">\n//         <h1>My Favorite Links</h1>\n//         <p>Add a new url with a name and link to the table.</p>\n//         <Table\n//           linkData={this.state.favLinks}\n//           removeLink={(index) => this.removeCharacter(index)}\n//         />\n//         <br />\n//         <h3>Add New</h3>\n//         <Form addNew={(favLink) => this.handleSubmit(favLink)} />\n//       </div>\n//     );\n//   }\n// }\n\n// export default LinkContainer;\n\n\n\n"]},"metadata":{},"sourceType":"module"}