{"ast":null,"code":"var _jsxFileName = \"/Users/tasfihasaba/Desktop/favlinks/src/components/Form.js\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      if (event.target.id === \"link\") {\n        this.setState({\n          linkName: event.target.value\n        }); // update the linkName in state\n      } else {\n        this.setState({\n          url: event.target.value\n        }); // update the url in state\n      }\n    };\n\n    this.onFormChange = event => {\n      event.preventDefault();\n      let newFavLink = {\n        linkName: this.state.linkName,\n        url: this.state.url\n      };\n      this.setState({\n        linkName: '',\n        url: ''\n      }); // reset the states\n\n      this.props.addNew(newFavLink); // addNew was passed as props from LinkContainer\n    };\n\n    this.state = {\n      linkName: '',\n      url: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.onFormChange = this.onFormChange.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"link\",\n        children: \"Link Name : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"link\",\n        onChange: event => this.handleChange(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"url\",\n        children: \"URL : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"url\",\n        onChange: event => this.handleChange(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: () => this.onFormChange(),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Form; // import { Component } from \"react\";\n// class Form extends Component {\n// constructor(props) {\n//   super(props);\n//   this.setState = {\n//   linkName: '',\n//   url: ''\n//   }\n//   this.handleChange = this.handleChange.bind(this);\n//   this.onFormChange = this.onFormChange.bind(this);\n//   }\n//   handleChange = event => {\n//   if(event.target.id === \"link\")\n//   this.setState({ linkname: event.target.value}); // update the linkname in state\n//   else\n//   this.setState({ url: event.target.value}); // update the url in state\n//   }\n//   onFormChange = event => {\n//   event.preventDefault();\n//   let newFavLink = {linkname: this.state.linkName, url: this.state.url};\n//   this.setState({ linkName: '', url: ''}); // reset the states\n//   this.props.addNew(newFavLink); // addNew was passed as props from LinkContainer\n//   }\n//   render() {\n//   return (\n//   <form>\n//   <label for=\"link\">Link Name : </label>\n//   <input type=\"text\" id=\"link\" onChange={(event) =>this.handleChange(event)}/>\n//   <label for=\"url\">URL : </label>\n//   <input type=\"text\" id=\"url\" onChange={(event) =>this.handleChange(event)}/>\n//   <button type=\"submit\" onClick={() => this.onFormSubmit()}>Submit</button>\n//   </form>\n//   )\n//   }\n// }\n// export default Form;","map":{"version":3,"sources":["/Users/tasfihasaba/Desktop/favlinks/src/components/Form.js"],"names":["Component","Form","constructor","props","handleChange","event","target","id","setState","linkName","value","url","onFormChange","preventDefault","newFavLink","state","addNew","bind","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAC3BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,YAXmB,GAWJC,KAAK,IAAI;AACtB,UAAGA,KAAK,CAACC,MAAN,CAAaC,EAAb,KAAoB,MAAvB,EAA+B;AAC7B,aAAKC,QAAL,CAAc;AAAEC,UAAAA,QAAQ,EAAEJ,KAAK,CAACC,MAAN,CAAaI;AAAzB,SAAd,EAD6B,CACoB;AAClD,OAFD,MAEO;AACL,aAAKF,QAAL,CAAc;AAAEG,UAAAA,GAAG,EAAEN,KAAK,CAACC,MAAN,CAAaI;AAApB,SAAd,EADK,CACuC;AAC7C;AACF,KAjBkB;;AAAA,SAmBnBE,YAnBmB,GAmBJP,KAAK,IAAI;AACtBA,MAAAA,KAAK,CAACQ,cAAN;AACA,UAAIC,UAAU,GAAG;AAAEL,QAAAA,QAAQ,EAAE,KAAKM,KAAL,CAAWN,QAAvB;AAAiCE,QAAAA,GAAG,EAAE,KAAKI,KAAL,CAAWJ;AAAjD,OAAjB;AACA,WAAKH,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAE,EAAZ;AAAgBE,QAAAA,GAAG,EAAE;AAArB,OAAd,EAHsB,CAGoB;;AAC1C,WAAKR,KAAL,CAAWa,MAAX,CAAkBF,UAAlB,EAJsB,CAIS;AAChC,KAxBkB;;AAEjB,SAAKC,KAAL,GAAa;AACXN,MAAAA,QAAQ,EAAE,EADC;AAEXE,MAAAA,GAAG,EAAE;AAFM,KAAb;AAKA,SAAKP,YAAL,GAAoB,KAAKA,YAAL,CAAkBa,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKL,YAAL,GAAoB,KAAKA,YAAL,CAAkBK,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAiBDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,QAAQ,EAAGb,KAAD,IAAW,KAAKD,YAAL,CAAkBC,KAAlB;AAAlD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,KAAtB;AAA4B,QAAA,QAAQ,EAAGA,KAAD,IAAW,KAAKD,YAAL,CAAkBC,KAAlB;AAAjD;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,MAAM,KAAKO,YAAL,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AArC0B;;AAwC7B,eAAeX,IAAf,C,CAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { Component } from \"react\";\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      linkName: '',\n      url: ''\n    }\n  \n    this.handleChange = this.handleChange.bind(this);\n    this.onFormChange = this.onFormChange.bind(this);\n  }\n\n  handleChange = event => {\n    if(event.target.id === \"link\") {\n      this.setState({ linkName: event.target.value }); // update the linkName in state\n    } else {\n      this.setState({ url: event.target.value }); // update the url in state\n    }\n  }\n\n  onFormChange = event => {\n    event.preventDefault();\n    let newFavLink = { linkName: this.state.linkName, url: this.state.url };\n    this.setState({ linkName: '', url: '' }); // reset the states\n    this.props.addNew(newFavLink); // addNew was passed as props from LinkContainer\n  }\n\n  render() {\n    return (\n      <form>\n        <label htmlFor=\"link\">Link Name : </label>\n        <input type=\"text\" id=\"link\" onChange={(event) => this.handleChange(event)} />\n        <label htmlFor=\"url\">URL : </label>\n        <input type=\"text\" id=\"url\" onChange={(event) => this.handleChange(event)} />\n        <button type=\"submit\" onClick={() => this.onFormChange()}>Submit</button>\n      </form>\n    )\n  }\n}\n\nexport default Form;\n\n\n\n// import { Component } from \"react\";\n\n\n// class Form extends Component {\n// constructor(props) {\n//   super(props);\n//   this.setState = {\n//   linkName: '',\n//   url: ''\n//   }\n  \n//   this.handleChange = this.handleChange.bind(this);\n//   this.onFormChange = this.onFormChange.bind(this);\n//   }\n//   handleChange = event => {\n//   if(event.target.id === \"link\")\n//   this.setState({ linkname: event.target.value}); // update the linkname in state\n//   else\n//   this.setState({ url: event.target.value}); // update the url in state\n//   }\n//   onFormChange = event => {\n//   event.preventDefault();\n//   let newFavLink = {linkname: this.state.linkName, url: this.state.url};\n//   this.setState({ linkName: '', url: ''}); // reset the states\n//   this.props.addNew(newFavLink); // addNew was passed as props from LinkContainer\n//   }\n//   render() {\n//   return (\n//   <form>\n//   <label for=\"link\">Link Name : </label>\n//   <input type=\"text\" id=\"link\" onChange={(event) =>this.handleChange(event)}/>\n//   <label for=\"url\">URL : </label>\n//   <input type=\"text\" id=\"url\" onChange={(event) =>this.handleChange(event)}/>\n//   <button type=\"submit\" onClick={() => this.onFormSubmit()}>Submit</button>\n//   </form>\n//   )\n//   }\n// }\n// export default Form;"]},"metadata":{},"sourceType":"module"}